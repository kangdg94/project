VTABLE(_rndModule) {
    <empty>
    rndModule
    _rndModule.COPY;
    _rndModule.Init;
    _rndModule.Random;
    _rndModule.RndInt;
}

VTABLE(_Deck) {
    <empty>
    Deck
    _Deck.COPY;
    _Deck.Init;
    _Deck.Shuffle;
    _Deck.GetCard;
}

VTABLE(_BJDeck) {
    <empty>
    BJDeck
    _BJDeck.COPY;
    _BJDeck.Init;
    _BJDeck.DealCard;
    _BJDeck.Shuffle;
    _BJDeck.NumCardsRemaining;
}

VTABLE(_Player) {
    <empty>
    Player
    _Player.COPY;
    _Player.Init;
    _Player.Hit;
    _Player.DoubleDown;
    _Player.TakeTurn;
    _Player.HasMoney;
    _Player.PrintMoney;
    _Player.PlaceBet;
    _Player.GetTotal;
    _Player.Resolve;
    _Player.GetYesOrNo;
}

VTABLE(_Dealer) {
    _Player
    Dealer
    _Dealer.COPY;
    _Dealer.Init;
    _Player.Hit;
    _Player.DoubleDown;
    _Dealer.TakeTurn;
    _Player.HasMoney;
    _Player.PrintMoney;
    _Player.PlaceBet;
    _Player.GetTotal;
    _Player.Resolve;
    _Player.GetYesOrNo;
}

VTABLE(_House) {
    <empty>
    House
    _House.COPY;
    _House.SetupGame;
    _House.SetupPlayers;
    _House.TakeAllBets;
    _House.TakeAllTurns;
    _House.ResolveAllPlayers;
    _House.PrintAllMoney;
    _House.PlayOneGame;
}

VTABLE(_Main) {
    <empty>
    Main
    _Main.COPY;
}

FUNCTION(_rndModule_New) {
memo ''
_rndModule_New:
    _T42 = 8
    parm _T42
    _T43 =  call _Alloc
    _T44 = 0
    *(_T43 + 4) = _T44
    _T45 = VTBL <_rndModule>
    *(_T43 + 0) = _T45
    return _T43
}

FUNCTION(_rndModule.COPY) {
memo '_T46:4'
_rndModule.COPY:
    _T47 = 8
    parm _T47
    _T48 =  call _Alloc
    _T49 = *(_T46 + 4)
    *(_T48 + 4) = _T49
    _T50 = VTBL <_rndModule>
    *(_T48 + 0) = _T50
    return _T48
}

FUNCTION(_Deck_New) {
memo ''
_Deck_New:
    _T51 = 16
    parm _T51
    _T52 =  call _Alloc
    _T53 = 0
    *(_T52 + 4) = _T53
    *(_T52 + 8) = _T53
    *(_T52 + 12) = _T53
    _T54 = VTBL <_Deck>
    *(_T52 + 0) = _T54
    return _T52
}

FUNCTION(_Deck.COPY) {
memo '_T55:4'
_Deck.COPY:
    _T56 = 16
    parm _T56
    _T57 =  call _Alloc
    _T58 = *(_T55 + 4)
    *(_T57 + 4) = _T58
    _T59 = *(_T55 + 8)
    *(_T57 + 8) = _T59
    _T60 = *(_T55 + 12)
    *(_T57 + 12) = _T60
    _T61 = VTBL <_Deck>
    *(_T57 + 0) = _T61
    return _T57
}

FUNCTION(_BJDeck_New) {
memo ''
_BJDeck_New:
    _T62 = 16
    parm _T62
    _T63 =  call _Alloc
    _T64 = 0
    *(_T63 + 4) = _T64
    *(_T63 + 8) = _T64
    *(_T63 + 12) = _T64
    _T65 = VTBL <_BJDeck>
    *(_T63 + 0) = _T65
    return _T63
}

FUNCTION(_BJDeck.COPY) {
memo '_T66:4'
_BJDeck.COPY:
    _T67 = 16
    parm _T67
    _T68 =  call _Alloc
    _T69 = *(_T66 + 4)
    *(_T68 + 4) = _T69
    _T70 = *(_T66 + 8)
    *(_T68 + 8) = _T70
    _T71 = *(_T66 + 12)
    *(_T68 + 12) = _T71
    _T72 = VTBL <_BJDeck>
    *(_T68 + 0) = _T72
    return _T68
}

FUNCTION(_Player_New) {
memo ''
_Player_New:
    _T73 = 28
    parm _T73
    _T74 =  call _Alloc
    _T75 = 0
    _T76 = 4
    _T77 = (_T74 + _T73)
_L46:
    _T78 = (_T77 - _T76)
    _T77 = _T78
    _T79 = (_T73 - _T76)
    _T73 = _T79
    if (_T73 == 0) branch _L47
    *(_T77 + 0) = _T75
    branch _L46
_L47:
    _T80 = VTBL <_Player>
    *(_T77 + 0) = _T80
    return _T77
}

FUNCTION(_Player.COPY) {
memo '_T81:4'
_Player.COPY:
    _T82 = 28
    parm _T82
    _T83 =  call _Alloc
    _T84 = *(_T81 + 4)
    *(_T83 + 4) = _T84
    _T85 = *(_T81 + 8)
    *(_T83 + 8) = _T85
    _T86 = *(_T81 + 12)
    *(_T83 + 12) = _T86
    _T87 = *(_T81 + 16)
    *(_T83 + 16) = _T87
    _T88 = *(_T81 + 20)
    *(_T83 + 20) = _T88
    _T89 = *(_T81 + 24)
    *(_T83 + 24) = _T89
    _T90 = VTBL <_Player>
    *(_T83 + 0) = _T90
    return _T83
}

FUNCTION(_Dealer_New) {
memo ''
_Dealer_New:
    _T91 = 28
    parm _T91
    _T92 =  call _Alloc
    _T93 = 0
    _T94 = 4
    _T95 = (_T92 + _T91)
_L50:
    _T96 = (_T95 - _T94)
    _T95 = _T96
    _T97 = (_T91 - _T94)
    _T91 = _T97
    if (_T91 == 0) branch _L51
    *(_T95 + 0) = _T93
    branch _L50
_L51:
    _T98 = VTBL <_Dealer>
    *(_T95 + 0) = _T98
    return _T95
}

FUNCTION(_Dealer.COPY) {
memo '_T99:4'
_Dealer.COPY:
    _T100 = 28
    parm _T100
    _T101 =  call _Alloc
    _T102 = *(_T99 + 4)
    *(_T101 + 4) = _T102
    _T103 = *(_T99 + 8)
    *(_T101 + 8) = _T103
    _T104 = *(_T99 + 12)
    *(_T101 + 12) = _T104
    _T105 = *(_T99 + 16)
    *(_T101 + 16) = _T105
    _T106 = *(_T99 + 20)
    *(_T101 + 20) = _T106
    _T107 = *(_T99 + 24)
    *(_T101 + 24) = _T107
    _T108 = VTBL <_Dealer>
    *(_T101 + 0) = _T108
    return _T101
}

FUNCTION(_House_New) {
memo ''
_House_New:
    _T109 = 16
    parm _T109
    _T110 =  call _Alloc
    _T111 = 0
    *(_T110 + 4) = _T111
    *(_T110 + 8) = _T111
    *(_T110 + 12) = _T111
    _T112 = VTBL <_House>
    *(_T110 + 0) = _T112
    return _T110
}

FUNCTION(_House.COPY) {
memo '_T113:4'
_House.COPY:
    _T114 = 16
    parm _T114
    _T115 =  call _Alloc
    _T116 = *(_T113 + 4)
    *(_T115 + 4) = _T116
    _T117 = *(_T113 + 8)
    *(_T115 + 8) = _T117
    _T118 = *(_T113 + 12)
    *(_T115 + 12) = _T118
    _T119 = VTBL <_House>
    *(_T115 + 0) = _T119
    return _T115
}

FUNCTION(_Main_New) {
memo ''
_Main_New:
    _T120 = 4
    parm _T120
    _T121 =  call _Alloc
    _T122 = VTBL <_Main>
    *(_T121 + 0) = _T122
    return _T121
}

FUNCTION(_Main.COPY) {
memo '_T123:4'
_Main.COPY:
    _T124 = 4
    parm _T124
    _T125 =  call _Alloc
    _T126 = VTBL <_Main>
    *(_T125 + 0) = _T126
    return _T125
}

FUNCTION(_rndModule.Init) {
memo '_T0:4 _T1:8'
_rndModule.Init:
    _T127 = *(_T0 + 4)
    *(_T0 + 4) = _T1
}

FUNCTION(_rndModule.Random) {
memo '_T2:4'
_rndModule.Random:
    _T128 = *(_T2 + 4)
    _T129 = 15625
    _T130 = *(_T2 + 4)
    _T131 = 10000
    _T132 = 0
    _T133 = (_T131 == _T132)
    if (_T133 == 0) branch _L57
    _T134 = "Decaf runtime error: Division by zero error.\n"
    parm _T134
    call _PrintString
    call _Halt
_L57:
    _T135 = (_T130 % _T131)
    _T136 = (_T129 * _T135)
    _T137 = 22221
    _T138 = (_T136 + _T137)
    _T139 = 65536
    _T140 = 0
    _T141 = (_T139 == _T140)
    if (_T141 == 0) branch _L58
    _T142 = "Decaf runtime error: Division by zero error.\n"
    parm _T142
    call _PrintString
    call _Halt
_L58:
    _T143 = (_T138 % _T139)
    *(_T2 + 4) = _T143
    _T144 = *(_T2 + 4)
    return _T144
}

FUNCTION(_rndModule.RndInt) {
memo '_T3:4 _T4:8'
_rndModule.RndInt:
    parm _T3
    _T145 = *(_T3 + 0)
    _T146 = *(_T145 + 16)
    _T147 =  call _T146
    _T148 = 0
    _T149 = (_T4 == _T148)
    if (_T149 == 0) branch _L59
    _T150 = "Decaf runtime error: Division by zero error.\n"
    parm _T150
    call _PrintString
    call _Halt
_L59:
    _T151 = (_T147 % _T4)
    return _T151
}

FUNCTION(_Deck.Init) {
memo '_T5:4 _T6:8'
_Deck.Init:
    _T152 = *(_T5 + 8)
    _T153 = 52
    _T154 = 0
    _T155 = (_T153 < _T154)
    if (_T155 == 0) branch _L60
    _T156 = "Decaf runtime error: Cannot create negative-sized array\n"
    parm _T156
    call _PrintString
    call _Halt
_L60:
    _T157 = 4
    _T158 = (_T157 * _T153)
    _T159 = (_T157 + _T158)
    parm _T159
    _T160 =  call _Alloc
    *(_T160 + 0) = _T153
    _T161 = 0
    _T160 = (_T160 + _T159)
_L61:
    _T159 = (_T159 - _T157)
    if (_T159 == 0) branch _L62
    _T160 = (_T160 - _T157)
    *(_T160 + 0) = _T161
    branch _L61
_L62:
    *(_T5 + 8) = _T160
    _T162 = *(_T5 + 12)
    *(_T5 + 12) = _T6
}

FUNCTION(_Deck.Shuffle) {
memo '_T7:4'
_Deck.Shuffle:
    _T163 = *(_T7 + 4)
    _T164 = 1
    *(_T7 + 4) = _T164
    branch _L63
_L64:
    _T165 = *(_T7 + 4)
    _T166 = *(_T7 + 4)
    _T167 = 1
    _T168 = (_T166 + _T167)
    *(_T7 + 4) = _T168
_L63:
    _T169 = *(_T7 + 4)
    _T170 = 52
    _T171 = (_T169 <= _T170)
    if (_T171 == 0) branch _L65
    _T172 = *(_T7 + 8)
    _T173 = *(_T7 + 4)
    _T174 = 1
    _T175 = (_T173 - _T174)
    _T176 = *(_T172 - 4)
    _T177 = (_T175 < _T176)
    if (_T177 == 0) branch _L66
    _T178 = 0
    _T179 = (_T175 < _T178)
    if (_T179 == 0) branch _L67
_L66:
    _T180 = "Decaf runtime error: Array subscript out of bounds\n"
    parm _T180
    call _PrintString
    call _Halt
_L67:
    _T181 = 4
    _T182 = (_T175 * _T181)
    _T183 = (_T172 + _T182)
    _T184 = *(_T183 + 0)
    _T185 = *(_T7 + 4)
    _T186 = 13
    _T187 = 0
    _T188 = (_T186 == _T187)
    if (_T188 == 0) branch _L68
    _T189 = "Decaf runtime error: Division by zero error.\n"
    parm _T189
    call _PrintString
    call _Halt
_L68:
    _T190 = (_T185 % _T186)
    _T191 = 4
    _T192 = (_T175 * _T191)
    _T193 = (_T172 + _T192)
    *(_T193 + 0) = _T190
    branch _L64
_L65:
    _T194 = *(_T7 + 4)
    _T195 = *(_T7 + 4)
    _T196 = 1
    _T197 = (_T195 - _T196)
    *(_T7 + 4) = _T197
_L69:
    _T198 = *(_T7 + 4)
    _T199 = 0
    _T200 = (_T198 > _T199)
    if (_T200 == 0) branch _L70
    _T203 = *(_T7 + 12)
    _T204 = *(_T7 + 4)
    parm _T203
    parm _T204
    _T205 = *(_T203 + 0)
    _T206 = *(_T205 + 20)
    _T207 =  call _T206
    _T201 = _T207
    _T208 = *(_T7 + 4)
    _T209 = *(_T7 + 4)
    _T210 = 1
    _T211 = (_T209 - _T210)
    *(_T7 + 4) = _T211
    _T212 = *(_T7 + 8)
    _T213 = *(_T7 + 4)
    _T214 = *(_T212 - 4)
    _T215 = (_T213 < _T214)
    if (_T215 == 0) branch _L71
    _T216 = 0
    _T217 = (_T213 < _T216)
    if (_T217 == 0) branch _L72
_L71:
    _T218 = "Decaf runtime error: Array subscript out of bounds\n"
    parm _T218
    call _PrintString
    call _Halt
_L72:
    _T219 = 4
    _T220 = (_T213 * _T219)
    _T221 = (_T212 + _T220)
    _T222 = *(_T221 + 0)
    _T202 = _T222
    _T223 = *(_T7 + 8)
    _T224 = *(_T7 + 4)
    _T225 = *(_T223 - 4)
    _T226 = (_T224 < _T225)
    if (_T226 == 0) branch _L73
    _T227 = 0
    _T228 = (_T224 < _T227)
    if (_T228 == 0) branch _L74
_L73:
    _T229 = "Decaf runtime error: Array subscript out of bounds\n"
    parm _T229
    call _PrintString
    call _Halt
_L74:
    _T230 = 4
    _T231 = (_T224 * _T230)
    _T232 = (_T223 + _T231)
    _T233 = *(_T232 + 0)
    _T234 = *(_T7 + 8)
    _T235 = *(_T234 - 4)
    _T236 = (_T201 < _T235)
    if (_T236 == 0) branch _L75
    _T237 = 0
    _T238 = (_T201 < _T237)
    if (_T238 == 0) branch _L76
_L75:
    _T239 = "Decaf runtime error: Array subscript out of bounds\n"
    parm _T239
    call _PrintString
    call _Halt
_L76:
    _T240 = 4
    _T241 = (_T201 * _T240)
    _T242 = (_T234 + _T241)
    _T243 = *(_T242 + 0)
    _T244 = 4
    _T245 = (_T224 * _T244)
    _T246 = (_T223 + _T245)
    *(_T246 + 0) = _T243
    _T247 = *(_T7 + 8)
    _T248 = *(_T247 - 4)
    _T249 = (_T201 < _T248)
    if (_T249 == 0) branch _L77
    _T250 = 0
    _T251 = (_T201 < _T250)
    if (_T251 == 0) branch _L78
_L77:
    _T252 = "Decaf runtime error: Array subscript out of bounds\n"
    parm _T252
    call _PrintString
    call _Halt
_L78:
    _T253 = 4
    _T254 = (_T201 * _T253)
    _T255 = (_T247 + _T254)
    _T256 = *(_T255 + 0)
    _T257 = 4
    _T258 = (_T201 * _T257)
    _T259 = (_T247 + _T258)
    *(_T259 + 0) = _T202
    branch _L69
_L70:
}

FUNCTION(_Deck.GetCard) {
memo '_T8:4'
_Deck.GetCard:
    _T261 = *(_T8 + 4)
    _T262 = 52
    _T263 = (_T261 >= _T262)
    if (_T263 == 0) branch _L79
    _T264 = 0
    return _T264
_L79:
    _T265 = *(_T8 + 8)
    _T266 = *(_T8 + 4)
    _T267 = *(_T265 - 4)
    _T268 = (_T266 < _T267)
    if (_T268 == 0) branch _L80
    _T269 = 0
    _T270 = (_T266 < _T269)
    if (_T270 == 0) branch _L81
_L80:
    _T271 = "Decaf runtime error: Array subscript out of bounds\n"
    parm _T271
    call _PrintString
    call _Halt
_L81:
    _T272 = 4
    _T273 = (_T266 * _T272)
    _T274 = (_T265 + _T273)
    _T275 = *(_T274 + 0)
    _T260 = _T275
    _T276 = *(_T8 + 4)
    _T277 = *(_T8 + 4)
    _T278 = 1
    _T279 = (_T277 + _T278)
    *(_T8 + 4) = _T279
    return _T260
}

FUNCTION(_BJDeck.Init) {
memo '_T9:4 _T10:8'
_BJDeck.Init:
    _T281 = *(_T9 + 4)
    _T282 = 8
    _T283 = 0
    _T284 = (_T282 < _T283)
    if (_T284 == 0) branch _L82
    _T285 = "Decaf runtime error: Cannot create negative-sized array\n"
    parm _T285
    call _PrintString
    call _Halt
_L82:
    _T286 = 4
    _T287 = (_T286 * _T282)
    _T288 = (_T286 + _T287)
    parm _T288
    _T289 =  call _Alloc
    *(_T289 + 0) = _T282
    _T290 = 0
    _T289 = (_T289 + _T288)
_L83:
    _T288 = (_T288 - _T286)
    if (_T288 == 0) branch _L84
    _T289 = (_T289 - _T286)
    *(_T289 + 0) = _T290
    branch _L83
_L84:
    *(_T9 + 4) = _T289
    _T291 = 0
    _T280 = _T291
    branch _L85
_L86:
    _T292 = 1
    _T293 = (_T280 + _T292)
    _T280 = _T293
_L85:
    _T294 = 8
    _T295 = (_T280 < _T294)
    if (_T295 == 0) branch _L87
    _T296 = *(_T9 + 4)
    _T297 = *(_T296 - 4)
    _T298 = (_T280 < _T297)
    if (_T298 == 0) branch _L88
    _T299 = 0
    _T300 = (_T280 < _T299)
    if (_T300 == 0) branch _L89
_L88:
    _T301 = "Decaf runtime error: Array subscript out of bounds\n"
    parm _T301
    call _PrintString
    call _Halt
_L89:
    _T302 = 4
    _T303 = (_T280 * _T302)
    _T304 = (_T296 + _T303)
    _T305 = *(_T304 + 0)
    _T306 =  call _Deck_New
    _T307 = 4
    _T308 = (_T280 * _T307)
    _T309 = (_T296 + _T308)
    *(_T309 + 0) = _T306
    _T310 = *(_T9 + 4)
    _T311 = *(_T310 - 4)
    _T312 = (_T280 < _T311)
    if (_T312 == 0) branch _L90
    _T313 = 0
    _T314 = (_T280 < _T313)
    if (_T314 == 0) branch _L91
_L90:
    _T315 = "Decaf runtime error: Array subscript out of bounds\n"
    parm _T315
    call _PrintString
    call _Halt
_L91:
    _T316 = 4
    _T317 = (_T280 * _T316)
    _T318 = (_T310 + _T317)
    _T319 = *(_T318 + 0)
    parm _T319
    parm _T10
    _T320 = *(_T319 + 0)
    _T321 = *(_T320 + 12)
    call _T321
    branch _L86
_L87:
    _T322 = *(_T9 + 12)
    *(_T9 + 12) = _T10
}

FUNCTION(_BJDeck.DealCard) {
memo '_T11:4'
_BJDeck.DealCard:
    _T324 = 0
    _T323 = _T324
    _T325 = *(_T11 + 8)
    _T326 = 8
    _T327 = 52
    _T328 = (_T326 * _T327)
    _T329 = (_T325 >= _T328)
    if (_T329 == 0) branch _L92
    _T330 = 11
    return _T330
_L92:
_L93:
    _T331 = 0
    _T332 = (_T323 == _T331)
    if (_T332 == 0) branch _L94
    _T334 = *(_T11 + 12)
    _T335 = 8
    parm _T334
    parm _T335
    _T336 = *(_T334 + 0)
    _T337 = *(_T336 + 20)
    _T338 =  call _T337
    _T333 = _T338
    _T339 = *(_T11 + 4)
    _T340 = *(_T339 - 4)
    _T341 = (_T333 < _T340)
    if (_T341 == 0) branch _L95
    _T342 = 0
    _T343 = (_T333 < _T342)
    if (_T343 == 0) branch _L96
_L95:
    _T344 = "Decaf runtime error: Array subscript out of bounds\n"
    parm _T344
    call _PrintString
    call _Halt
_L96:
    _T345 = 4
    _T346 = (_T333 * _T345)
    _T347 = (_T339 + _T346)
    _T348 = *(_T347 + 0)
    parm _T348
    _T349 = *(_T348 + 0)
    _T350 = *(_T349 + 20)
    _T351 =  call _T350
    _T323 = _T351
    branch _L93
_L94:
    _T352 = 10
    _T353 = (_T323 > _T352)
    if (_T353 == 0) branch _L97
    _T354 = 10
    _T323 = _T354
    branch _L98
_L97:
    _T355 = 1
    _T356 = (_T323 == _T355)
    if (_T356 == 0) branch _L99
    _T357 = 11
    _T323 = _T357
_L99:
_L98:
    _T358 = *(_T11 + 8)
    _T359 = *(_T11 + 8)
    _T360 = 1
    _T361 = (_T359 + _T360)
    *(_T11 + 8) = _T361
    return _T323
}

FUNCTION(_BJDeck.Shuffle) {
memo '_T12:4'
_BJDeck.Shuffle:
    _T363 = "Shuffling..."
    parm _T363
    call _PrintString
    _T364 = 0
    _T362 = _T364
    branch _L100
_L101:
    _T365 = 1
    _T366 = (_T362 + _T365)
    _T362 = _T366
_L100:
    _T367 = 8
    _T368 = (_T362 < _T367)
    if (_T368 == 0) branch _L102
    _T369 = *(_T12 + 4)
    _T370 = *(_T369 - 4)
    _T371 = (_T362 < _T370)
    if (_T371 == 0) branch _L103
    _T372 = 0
    _T373 = (_T362 < _T372)
    if (_T373 == 0) branch _L104
_L103:
    _T374 = "Decaf runtime error: Array subscript out of bounds\n"
    parm _T374
    call _PrintString
    call _Halt
_L104:
    _T375 = 4
    _T376 = (_T362 * _T375)
    _T377 = (_T369 + _T376)
    _T378 = *(_T377 + 0)
    parm _T378
    _T379 = *(_T378 + 0)
    _T380 = *(_T379 + 16)
    call _T380
    branch _L101
_L102:
    _T381 = *(_T12 + 8)
    _T382 = 0
    *(_T12 + 8) = _T382
    _T383 = "done.\n"
    parm _T383
    call _PrintString
}

FUNCTION(_BJDeck.NumCardsRemaining) {
memo '_T13:4'
_BJDeck.NumCardsRemaining:
    _T384 = 8
    _T385 = 52
    _T386 = (_T384 * _T385)
    _T387 = *(_T13 + 8)
    _T388 = (_T386 - _T387)
    return _T388
}

FUNCTION(_Player.Init) {
memo '_T14:4 _T15:8'
_Player.Init:
    _T389 = *(_T14 + 20)
    _T390 = 1000
    *(_T14 + 20) = _T390
    _T391 = "What is the name of player #"
    parm _T391
    call _PrintString
    parm _T15
    call _PrintInt
    _T392 = "? "
    parm _T392
    call _PrintString
    _T393 = *(_T14 + 24)
    _T394 =  call _ReadLine
    *(_T14 + 24) = _T394
}

FUNCTION(_Player.Hit) {
memo '_T16:4 _T17:8'
_Player.Hit:
    parm _T17
    _T396 = *(_T17 + 0)
    _T397 = *(_T396 + 16)
    _T398 =  call _T397
    _T395 = _T398
    _T399 = *(_T16 + 24)
    parm _T399
    call _PrintString
    _T400 = " was dealt a "
    parm _T400
    call _PrintString
    parm _T395
    call _PrintInt
    _T401 = ".\n"
    parm _T401
    call _PrintString
    _T402 = *(_T16 + 4)
    _T403 = *(_T16 + 4)
    _T404 = (_T403 + _T395)
    *(_T16 + 4) = _T404
    _T405 = *(_T16 + 12)
    _T406 = *(_T16 + 12)
    _T407 = 1
    _T408 = (_T406 + _T407)
    *(_T16 + 12) = _T408
    _T409 = 11
    _T410 = (_T395 == _T409)
    if (_T410 == 0) branch _L105
    _T411 = *(_T16 + 8)
    _T412 = *(_T16 + 8)
    _T413 = 1
    _T414 = (_T412 + _T413)
    *(_T16 + 8) = _T414
_L105:
_L106:
    _T415 = *(_T16 + 4)
    _T416 = 21
    _T417 = (_T415 > _T416)
    _T418 = *(_T16 + 8)
    _T419 = 0
    _T420 = (_T418 > _T419)
    _T421 = (_T417 && _T420)
    if (_T421 == 0) branch _L107
    _T422 = *(_T16 + 4)
    _T423 = *(_T16 + 4)
    _T424 = 10
    _T425 = (_T423 - _T424)
    *(_T16 + 4) = _T425
    _T426 = *(_T16 + 8)
    _T427 = *(_T16 + 8)
    _T428 = 1
    _T429 = (_T427 - _T428)
    *(_T16 + 8) = _T429
    branch _L106
_L107:
}

FUNCTION(_Player.DoubleDown) {
memo '_T18:4 _T19:8'
_Player.DoubleDown:
    _T431 = *(_T18 + 4)
    _T432 = 10
    _T433 = (_T431 != _T432)
    _T434 = *(_T18 + 4)
    _T435 = 11
    _T436 = (_T434 != _T435)
    _T437 = (_T433 && _T436)
    if (_T437 == 0) branch _L108
    _T438 = 0
    return _T438
_L108:
    _T439 = "Would you like to double down?"
    parm _T18
    parm _T439
    _T440 = *(_T18 + 0)
    _T441 = *(_T440 + 48)
    _T442 =  call _T441
    if (_T442 == 0) branch _L109
    _T443 = *(_T18 + 16)
    _T444 = *(_T18 + 16)
    _T445 = 2
    _T446 = (_T444 * _T445)
    *(_T18 + 16) = _T446
    parm _T18
    parm _T19
    _T447 = *(_T18 + 0)
    _T448 = *(_T447 + 16)
    call _T448
    _T449 = *(_T18 + 24)
    parm _T449
    call _PrintString
    _T450 = ", your total is "
    parm _T450
    call _PrintString
    _T451 = *(_T18 + 4)
    parm _T451
    call _PrintInt
    _T452 = ".\n"
    parm _T452
    call _PrintString
    _T453 = 1
    return _T453
    branch _L110
_L109:
    _T454 = 0
    return _T454
_L110:
}

FUNCTION(_Player.TakeTurn) {
memo '_T20:4 _T21:8'
_Player.TakeTurn:
    _T456 = "\n"
    parm _T456
    call _PrintString
    _T457 = *(_T20 + 24)
    parm _T457
    call _PrintString
    _T458 = "'s turn.\n"
    parm _T458
    call _PrintString
    _T459 = *(_T20 + 4)
    _T460 = 0
    *(_T20 + 4) = _T460
    _T461 = *(_T20 + 8)
    _T462 = 0
    *(_T20 + 8) = _T462
    _T463 = *(_T20 + 12)
    _T464 = 0
    *(_T20 + 12) = _T464
    parm _T20
    parm _T21
    _T465 = *(_T20 + 0)
    _T466 = *(_T465 + 16)
    call _T466
    parm _T20
    parm _T21
    _T467 = *(_T20 + 0)
    _T468 = *(_T467 + 16)
    call _T468
    parm _T20
    parm _T21
    _T469 = *(_T20 + 0)
    _T470 = *(_T469 + 20)
    _T471 =  call _T470
    _T472 = ! _T471
    if (_T472 == 0) branch _L111
    _T473 = 1
    _T455 = _T473
_L112:
    _T474 = *(_T20 + 4)
    _T475 = 21
    _T476 = (_T474 <= _T475)
    _T477 = (_T476 && _T455)
    if (_T477 == 0) branch _L113
    _T478 = *(_T20 + 24)
    parm _T478
    call _PrintString
    _T479 = ", your total is "
    parm _T479
    call _PrintString
    _T480 = *(_T20 + 4)
    parm _T480
    call _PrintInt
    _T481 = ".\n"
    parm _T481
    call _PrintString
    _T482 = "Would you like a hit?"
    parm _T20
    parm _T482
    _T483 = *(_T20 + 0)
    _T484 = *(_T483 + 48)
    _T485 =  call _T484
    _T455 = _T485
    if (_T455 == 0) branch _L114
    parm _T20
    parm _T21
    _T486 = *(_T20 + 0)
    _T487 = *(_T486 + 16)
    call _T487
_L114:
    branch _L112
_L113:
_L111:
    _T488 = *(_T20 + 4)
    _T489 = 21
    _T490 = (_T488 > _T489)
    if (_T490 == 0) branch _L115
    _T491 = *(_T20 + 24)
    parm _T491
    call _PrintString
    _T492 = " busts with the big "
    parm _T492
    call _PrintString
    _T493 = *(_T20 + 4)
    parm _T493
    call _PrintInt
    _T494 = "!\n"
    parm _T494
    call _PrintString
    branch _L116
_L115:
    _T495 = *(_T20 + 24)
    parm _T495
    call _PrintString
    _T496 = " stays at "
    parm _T496
    call _PrintString
    _T497 = *(_T20 + 4)
    parm _T497
    call _PrintInt
    _T498 = ".\n"
    parm _T498
    call _PrintString
_L116:
}

FUNCTION(_Player.HasMoney) {
memo '_T22:4'
_Player.HasMoney:
    _T499 = *(_T22 + 20)
    _T500 = 0
    _T501 = (_T499 > _T500)
    return _T501
}

FUNCTION(_Player.PrintMoney) {
memo '_T23:4'
_Player.PrintMoney:
    _T502 = *(_T23 + 24)
    parm _T502
    call _PrintString
    _T503 = ", you have $"
    parm _T503
    call _PrintString
    _T504 = *(_T23 + 20)
    parm _T504
    call _PrintInt
    _T505 = ".\n"
    parm _T505
    call _PrintString
}

FUNCTION(_Player.PlaceBet) {
memo '_T24:4'
_Player.PlaceBet:
    _T506 = *(_T24 + 16)
    _T507 = 0
    *(_T24 + 16) = _T507
    parm _T24
    _T508 = *(_T24 + 0)
    _T509 = *(_T508 + 32)
    call _T509
_L117:
    _T510 = *(_T24 + 16)
    _T511 = 0
    _T512 = (_T510 <= _T511)
    _T513 = *(_T24 + 16)
    _T514 = *(_T24 + 20)
    _T515 = (_T513 > _T514)
    _T516 = (_T512 || _T515)
    if (_T516 == 0) branch _L118
    _T517 = "How much would you like to bet? "
    parm _T517
    call _PrintString
    _T518 = *(_T24 + 16)
    _T519 =  call _ReadInteger
    *(_T24 + 16) = _T519
    branch _L117
_L118:
}

FUNCTION(_Player.GetTotal) {
memo '_T25:4'
_Player.GetTotal:
    _T520 = *(_T25 + 4)
    return _T520
}

FUNCTION(_Player.Resolve) {
memo '_T26:4 _T27:8'
_Player.Resolve:
    _T523 = 0
    _T521 = _T523
    _T524 = 0
    _T522 = _T524
    _T525 = *(_T26 + 4)
    _T526 = 21
    _T527 = (_T525 == _T526)
    _T528 = *(_T26 + 12)
    _T529 = 2
    _T530 = (_T528 == _T529)
    _T531 = (_T527 && _T530)
    if (_T531 == 0) branch _L119
    _T532 = 2
    _T521 = _T532
    branch _L120
_L119:
    _T533 = *(_T26 + 4)
    _T534 = 21
    _T535 = (_T533 > _T534)
    if (_T535 == 0) branch _L121
    _T536 = 1
    _T522 = _T536
    branch _L122
_L121:
    _T537 = 21
    _T538 = (_T27 > _T537)
    if (_T538 == 0) branch _L123
    _T539 = 1
    _T521 = _T539
    branch _L124
_L123:
    _T540 = *(_T26 + 4)
    _T541 = (_T540 > _T27)
    if (_T541 == 0) branch _L125
    _T542 = 1
    _T521 = _T542
    branch _L126
_L125:
    _T543 = *(_T26 + 4)
    _T544 = (_T27 > _T543)
    if (_T544 == 0) branch _L127
    _T545 = 1
    _T522 = _T545
_L127:
_L126:
_L124:
_L122:
_L120:
    _T546 = 1
    _T547 = (_T521 >= _T546)
    if (_T547 == 0) branch _L128
    _T548 = *(_T26 + 24)
    parm _T548
    call _PrintString
    _T549 = ", you won $"
    parm _T549
    call _PrintString
    _T550 = *(_T26 + 16)
    parm _T550
    call _PrintInt
    _T551 = ".\n"
    parm _T551
    call _PrintString
    branch _L129
_L128:
    _T552 = 1
    _T553 = (_T522 >= _T552)
    if (_T553 == 0) branch _L130
    _T554 = *(_T26 + 24)
    parm _T554
    call _PrintString
    _T555 = ", you lost $"
    parm _T555
    call _PrintString
    _T556 = *(_T26 + 16)
    parm _T556
    call _PrintInt
    _T557 = ".\n"
    parm _T557
    call _PrintString
    branch _L131
_L130:
    _T558 = *(_T26 + 24)
    parm _T558
    call _PrintString
    _T559 = ", you push!\n"
    parm _T559
    call _PrintString
_L131:
_L129:
    _T560 = *(_T26 + 16)
    _T561 = (_T521 * _T560)
    _T521 = _T561
    _T562 = *(_T26 + 16)
    _T563 = (_T522 * _T562)
    _T522 = _T563
    _T564 = *(_T26 + 20)
    _T565 = *(_T26 + 20)
    _T566 = (_T565 + _T521)
    _T567 = (_T566 - _T522)
    *(_T26 + 20) = _T567
}

FUNCTION(_Player.GetYesOrNo) {
memo '_T28:4 _T29:8'
_Player.GetYesOrNo:
    parm _T29
    call _PrintString
    _T568 = " (0=No/1=Yes) "
    parm _T568
    call _PrintString
    _T569 =  call _ReadInteger
    _T570 = 0
    _T571 = (_T569 != _T570)
    return _T571
}

FUNCTION(_Dealer.Init) {
memo '_T30:4 _T31:8'
_Dealer.Init:
    _T573 = *(_T30 + 4)
    _T574 = 0
    *(_T30 + 4) = _T574
    _T575 = *(_T30 + 8)
    _T576 = 0
    *(_T30 + 8) = _T576
    _T577 = *(_T30 + 12)
    _T578 = 0
    *(_T30 + 12) = _T578
    _T579 = "Dealer"
    _T572 = _T579
    _T580 = *(_T30 + 24)
    *(_T30 + 24) = _T572
}

FUNCTION(_Dealer.TakeTurn) {
memo '_T32:4 _T33:8'
_Dealer.TakeTurn:
    _T581 = "\n"
    parm _T581
    call _PrintString
    _T582 = *(_T32 + 24)
    parm _T582
    call _PrintString
    _T583 = "'s turn.\n"
    parm _T583
    call _PrintString
_L132:
    _T584 = *(_T32 + 4)
    _T585 = 16
    _T586 = (_T584 <= _T585)
    if (_T586 == 0) branch _L133
    parm _T32
    parm _T33
    _T587 = *(_T32 + 0)
    _T588 = *(_T587 + 16)
    call _T588
    branch _L132
_L133:
    _T589 = *(_T32 + 4)
    _T590 = 21
    _T591 = (_T589 > _T590)
    if (_T591 == 0) branch _L134
    _T592 = *(_T32 + 24)
    parm _T592
    call _PrintString
    _T593 = " busts with the big "
    parm _T593
    call _PrintString
    _T594 = *(_T32 + 4)
    parm _T594
    call _PrintInt
    _T595 = "!\n"
    parm _T595
    call _PrintString
    branch _L135
_L134:
    _T596 = *(_T32 + 24)
    parm _T596
    call _PrintString
    _T597 = " stays at "
    parm _T597
    call _PrintString
    _T598 = *(_T32 + 4)
    parm _T598
    call _PrintInt
    _T599 = ".\n"
    parm _T599
    call _PrintString
_L135:
}

FUNCTION(_House.SetupGame) {
memo '_T34:4'
_House.SetupGame:
    _T600 = "\nWelcome to CS143 BlackJack!\n"
    parm _T600
    call _PrintString
    _T601 = "---------------------------\n"
    parm _T601
    call _PrintString
    _T603 =  call _rndModule_New
    _T602 = _T603
    _T604 = "Please enter a random number seed: "
    parm _T604
    call _PrintString
    _T605 =  call _ReadInteger
    parm _T602
    parm _T605
    _T606 = *(_T602 + 0)
    _T607 = *(_T606 + 12)
    call _T607
    _T608 = *(_T34 + 12)
    _T609 =  call _BJDeck_New
    *(_T34 + 12) = _T609
    _T610 = *(_T34 + 8)
    _T611 =  call _Dealer_New
    *(_T34 + 8) = _T611
    _T612 = *(_T34 + 12)
    parm _T612
    parm _T602
    _T613 = *(_T612 + 0)
    _T614 = *(_T613 + 12)
    call _T614
    _T615 = *(_T34 + 12)
    parm _T615
    _T616 = *(_T615 + 0)
    _T617 = *(_T616 + 20)
    call _T617
}

FUNCTION(_House.SetupPlayers) {
memo '_T35:4'
_House.SetupPlayers:
    _T620 = "How many players do we have today? "
    parm _T620
    call _PrintString
    _T621 =  call _ReadInteger
    _T619 = _T621
    _T622 = *(_T35 + 4)
    _T623 = 0
    _T624 = (_T619 < _T623)
    if (_T624 == 0) branch _L136
    _T625 = "Decaf runtime error: Cannot create negative-sized array\n"
    parm _T625
    call _PrintString
    call _Halt
_L136:
    _T626 = 4
    _T627 = (_T626 * _T619)
    _T628 = (_T626 + _T627)
    parm _T628
    _T629 =  call _Alloc
    *(_T629 + 0) = _T619
    _T630 = 0
    _T629 = (_T629 + _T628)
_L137:
    _T628 = (_T628 - _T626)
    if (_T628 == 0) branch _L138
    _T629 = (_T629 - _T626)
    *(_T629 + 0) = _T630
    branch _L137
_L138:
    *(_T35 + 4) = _T629
    _T631 = 0
    _T618 = _T631
    branch _L139
_L140:
    _T632 = 1
    _T633 = (_T618 + _T632)
    _T618 = _T633
_L139:
    _T634 = *(_T35 + 4)
    _T635 = *(_T634 - 4)
    _T636 = (_T618 < _T635)
    if (_T636 == 0) branch _L141
    _T637 = *(_T35 + 4)
    _T638 = *(_T637 - 4)
    _T639 = (_T618 < _T638)
    if (_T639 == 0) branch _L142
    _T640 = 0
    _T641 = (_T618 < _T640)
    if (_T641 == 0) branch _L143
_L142:
    _T642 = "Decaf runtime error: Array subscript out of bounds\n"
    parm _T642
    call _PrintString
    call _Halt
_L143:
    _T643 = 4
    _T644 = (_T618 * _T643)
    _T645 = (_T637 + _T644)
    _T646 = *(_T645 + 0)
    _T647 =  call _Player_New
    _T648 = 4
    _T649 = (_T618 * _T648)
    _T650 = (_T637 + _T649)
    *(_T650 + 0) = _T647
    _T651 = *(_T35 + 4)
    _T652 = *(_T651 - 4)
    _T653 = (_T618 < _T652)
    if (_T653 == 0) branch _L144
    _T654 = 0
    _T655 = (_T618 < _T654)
    if (_T655 == 0) branch _L145
_L144:
    _T656 = "Decaf runtime error: Array subscript out of bounds\n"
    parm _T656
    call _PrintString
    call _Halt
_L145:
    _T657 = 4
    _T658 = (_T618 * _T657)
    _T659 = (_T651 + _T658)
    _T660 = *(_T659 + 0)
    _T661 = 1
    _T662 = (_T618 + _T661)
    parm _T660
    parm _T662
    _T663 = *(_T660 + 0)
    _T664 = *(_T663 + 12)
    call _T664
    branch _L140
_L141:
}

FUNCTION(_House.TakeAllBets) {
memo '_T36:4'
_House.TakeAllBets:
    _T666 = "\nFirst, let's take bets.\n"
    parm _T666
    call _PrintString
    _T667 = 0
    _T665 = _T667
    branch _L146
_L147:
    _T668 = 1
    _T669 = (_T665 + _T668)
    _T665 = _T669
_L146:
    _T670 = *(_T36 + 4)
    _T671 = *(_T670 - 4)
    _T672 = (_T665 < _T671)
    if (_T672 == 0) branch _L148
    _T673 = *(_T36 + 4)
    _T674 = *(_T673 - 4)
    _T675 = (_T665 < _T674)
    if (_T675 == 0) branch _L149
    _T676 = 0
    _T677 = (_T665 < _T676)
    if (_T677 == 0) branch _L150
_L149:
    _T678 = "Decaf runtime error: Array subscript out of bounds\n"
    parm _T678
    call _PrintString
    call _Halt
_L150:
    _T679 = 4
    _T680 = (_T665 * _T679)
    _T681 = (_T673 + _T680)
    _T682 = *(_T681 + 0)
    parm _T682
    _T683 = *(_T682 + 0)
    _T684 = *(_T683 + 28)
    _T685 =  call _T684
    if (_T685 == 0) branch _L151
    _T686 = *(_T36 + 4)
    _T687 = *(_T686 - 4)
    _T688 = (_T665 < _T687)
    if (_T688 == 0) branch _L152
    _T689 = 0
    _T690 = (_T665 < _T689)
    if (_T690 == 0) branch _L153
_L152:
    _T691 = "Decaf runtime error: Array subscript out of bounds\n"
    parm _T691
    call _PrintString
    call _Halt
_L153:
    _T692 = 4
    _T693 = (_T665 * _T692)
    _T694 = (_T686 + _T693)
    _T695 = *(_T694 + 0)
    parm _T695
    _T696 = *(_T695 + 0)
    _T697 = *(_T696 + 36)
    call _T697
_L151:
    branch _L147
_L148:
}

FUNCTION(_House.TakeAllTurns) {
memo '_T37:4'
_House.TakeAllTurns:
    _T699 = 0
    _T698 = _T699
    branch _L154
_L155:
    _T700 = 1
    _T701 = (_T698 + _T700)
    _T698 = _T701
_L154:
    _T702 = *(_T37 + 4)
    _T703 = *(_T702 - 4)
    _T704 = (_T698 < _T703)
    if (_T704 == 0) branch _L156
    _T705 = *(_T37 + 4)
    _T706 = *(_T705 - 4)
    _T707 = (_T698 < _T706)
    if (_T707 == 0) branch _L157
    _T708 = 0
    _T709 = (_T698 < _T708)
    if (_T709 == 0) branch _L158
_L157:
    _T710 = "Decaf runtime error: Array subscript out of bounds\n"
    parm _T710
    call _PrintString
    call _Halt
_L158:
    _T711 = 4
    _T712 = (_T698 * _T711)
    _T713 = (_T705 + _T712)
    _T714 = *(_T713 + 0)
    parm _T714
    _T715 = *(_T714 + 0)
    _T716 = *(_T715 + 28)
    _T717 =  call _T716
    if (_T717 == 0) branch _L159
    _T718 = *(_T37 + 4)
    _T719 = *(_T718 - 4)
    _T720 = (_T698 < _T719)
    if (_T720 == 0) branch _L160
    _T721 = 0
    _T722 = (_T698 < _T721)
    if (_T722 == 0) branch _L161
_L160:
    _T723 = "Decaf runtime error: Array subscript out of bounds\n"
    parm _T723
    call _PrintString
    call _Halt
_L161:
    _T724 = 4
    _T725 = (_T698 * _T724)
    _T726 = (_T718 + _T725)
    _T727 = *(_T726 + 0)
    _T728 = *(_T37 + 12)
    parm _T727
    parm _T728
    _T729 = *(_T727 + 0)
    _T730 = *(_T729 + 24)
    call _T730
_L159:
    branch _L155
_L156:
}

FUNCTION(_House.ResolveAllPlayers) {
memo '_T38:4'
_House.ResolveAllPlayers:
    _T732 = "\nTime to resolve bets.\n"
    parm _T732
    call _PrintString
    _T733 = 0
    _T731 = _T733
    branch _L162
_L163:
    _T734 = 1
    _T735 = (_T731 + _T734)
    _T731 = _T735
_L162:
    _T736 = *(_T38 + 4)
    _T737 = *(_T736 - 4)
    _T738 = (_T731 < _T737)
    if (_T738 == 0) branch _L164
    _T739 = *(_T38 + 4)
    _T740 = *(_T739 - 4)
    _T741 = (_T731 < _T740)
    if (_T741 == 0) branch _L165
    _T742 = 0
    _T743 = (_T731 < _T742)
    if (_T743 == 0) branch _L166
_L165:
    _T744 = "Decaf runtime error: Array subscript out of bounds\n"
    parm _T744
    call _PrintString
    call _Halt
_L166:
    _T745 = 4
    _T746 = (_T731 * _T745)
    _T747 = (_T739 + _T746)
    _T748 = *(_T747 + 0)
    parm _T748
    _T749 = *(_T748 + 0)
    _T750 = *(_T749 + 28)
    _T751 =  call _T750
    if (_T751 == 0) branch _L167
    _T752 = *(_T38 + 4)
    _T753 = *(_T752 - 4)
    _T754 = (_T731 < _T753)
    if (_T754 == 0) branch _L168
    _T755 = 0
    _T756 = (_T731 < _T755)
    if (_T756 == 0) branch _L169
_L168:
    _T757 = "Decaf runtime error: Array subscript out of bounds\n"
    parm _T757
    call _PrintString
    call _Halt
_L169:
    _T758 = 4
    _T759 = (_T731 * _T758)
    _T760 = (_T752 + _T759)
    _T761 = *(_T760 + 0)
    _T762 = *(_T38 + 8)
    parm _T762
    _T763 = *(_T762 + 0)
    _T764 = *(_T763 + 40)
    _T765 =  call _T764
    parm _T761
    parm _T765
    _T766 = *(_T761 + 0)
    _T767 = *(_T766 + 44)
    call _T767
_L167:
    branch _L163
_L164:
}

FUNCTION(_House.PrintAllMoney) {
memo '_T39:4'
_House.PrintAllMoney:
    _T769 = 0
    _T768 = _T769
    branch _L170
_L171:
    _T770 = 1
    _T771 = (_T768 + _T770)
    _T768 = _T771
_L170:
    _T772 = *(_T39 + 4)
    _T773 = *(_T772 - 4)
    _T774 = (_T768 < _T773)
    if (_T774 == 0) branch _L172
    _T775 = *(_T39 + 4)
    _T776 = *(_T775 - 4)
    _T777 = (_T768 < _T776)
    if (_T777 == 0) branch _L173
    _T778 = 0
    _T779 = (_T768 < _T778)
    if (_T779 == 0) branch _L174
_L173:
    _T780 = "Decaf runtime error: Array subscript out of bounds\n"
    parm _T780
    call _PrintString
    call _Halt
_L174:
    _T781 = 4
    _T782 = (_T768 * _T781)
    _T783 = (_T775 + _T782)
    _T784 = *(_T783 + 0)
    parm _T784
    _T785 = *(_T784 + 0)
    _T786 = *(_T785 + 32)
    call _T786
    branch _L171
_L172:
}

FUNCTION(_House.PlayOneGame) {
memo '_T40:4'
_House.PlayOneGame:
    _T787 = *(_T40 + 12)
    parm _T787
    _T788 = *(_T787 + 0)
    _T789 = *(_T788 + 24)
    _T790 =  call _T789
    _T791 = 26
    _T792 = (_T790 < _T791)
    if (_T792 == 0) branch _L175
    _T793 = *(_T40 + 12)
    parm _T793
    _T794 = *(_T793 + 0)
    _T795 = *(_T794 + 20)
    call _T795
_L175:
    parm _T40
    _T796 = *(_T40 + 0)
    _T797 = *(_T796 + 20)
    call _T797
    _T798 = "\nDealer starts. "
    parm _T798
    call _PrintString
    _T799 = *(_T40 + 8)
    _T800 = 0
    parm _T799
    parm _T800
    _T801 = *(_T799 + 0)
    _T802 = *(_T801 + 12)
    call _T802
    _T803 = *(_T40 + 8)
    _T804 = *(_T40 + 12)
    parm _T803
    parm _T804
    _T805 = *(_T803 + 0)
    _T806 = *(_T805 + 16)
    call _T806
    parm _T40
    _T807 = *(_T40 + 0)
    _T808 = *(_T807 + 24)
    call _T808
    _T809 = *(_T40 + 8)
    _T810 = *(_T40 + 12)
    parm _T809
    parm _T810
    _T811 = *(_T809 + 0)
    _T812 = *(_T811 + 24)
    call _T812
    parm _T40
    _T813 = *(_T40 + 0)
    _T814 = *(_T813 + 28)
    call _T814
}

FUNCTION(main) {
memo ''
main:
    _T816 = 1
    _T815 = _T816
    _T818 =  call _House_New
    _T817 = _T818
    parm _T817
    _T819 = *(_T817 + 0)
    _T820 = *(_T819 + 12)
    call _T820
    parm _T817
    _T821 = *(_T817 + 0)
    _T822 = *(_T821 + 16)
    call _T822
_L176:
    if (_T815 == 0) branch _L177
    parm _T817
    _T823 = *(_T817 + 0)
    _T824 = *(_T823 + 36)
    call _T824
    _T825 = "\nDo you want to play another hand?"
    parm _T825
    _T826 =  call _Main.GetYesOrNo
    _T815 = _T826
    branch _L176
_L177:
    parm _T817
    _T827 = *(_T817 + 0)
    _T828 = *(_T827 + 32)
    call _T828
    _T829 = "Thank you for playing...come again soon.\n"
    parm _T829
    call _PrintString
    _T830 = "\nCS143 BlackJack Copyright (c) 1999 by Peter Mork.\n"
    parm _T830
    call _PrintString
    _T831 = "(2001 mods by jdz)\n"
    parm _T831
    call _PrintString
}

FUNCTION(_Main.GetYesOrNo) {
memo '_T41:4'
_Main.GetYesOrNo:
    parm _T41
    call _PrintString
    _T832 = " (0=No/1=Yes) "
    parm _T832
    call _PrintString
    _T833 =  call _ReadInteger
    _T834 = 0
    _T835 = (_T833 != _T834)
    return _T835
}

